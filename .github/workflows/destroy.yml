name: Destroy Infrastructure with Terraform

on:
  workflow_dispatch:  # Allows manual trigger from GitHub UI

jobs:
  terraform-destroy:
    name: Destroy Infrastructure with Terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up AWS credentials for accessing EC2
    - name: Set up AWS credentials 
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init  # This will use the existing remote backend configuration

    # Delete S3 bucket
    - name: Delete S3 bucket 
      run: |
        aws s3 rm s3://tfstate-bucket-final-unique --recursive
        aws s3api delete-bucket --bucket tfstate-bucket-final-unique --region eu-north-1

    - name: Delete DynamoDB table
      run: |
        aws dynamodb delete-table --region eu-north-1 --table-name tfstate-lock-final 

    
    
    # Terraform Destroy
    - name: Terraform Destroy
      working-directory: ./terraform
      run: terraform destroy -auto-approve  # Destroy infrastructure using remote state
