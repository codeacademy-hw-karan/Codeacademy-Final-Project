- name: Setup EC2 instance for Llama model
  hosts: all
  become: true  # To run commands with sudo privileges
  tasks:
    - name: Update system packages
      yum:
        name: '*'
        state: latest

    - name: Install Docker
      yum:
        name: docker
        state: present

   
    - name: Add ec2-user to docker group
      user:
        name: ec2-user
        group: docker

    - name: Start Docker service
      systemd:
        name: docker
        state: started
        enabled: true

    - name: Install Git
      yum:
        name: git
        state: present

    - name: Ensure monitoring-net Docker network exists
      command: docker network create monitoring-net

    - name: Create models directory
      file:
        path: /home/ec2-user/models
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Download model from Hugging Face
      get_url:
        url: https://huggingface.co/TheBloke/TinyLlama-1.1B-1T-OpenOrca-GGUF/resolve/main/tinyllama-1.1b-1t-openorca.Q2_K.gguf
        dest: /home/ec2-user/models/tinyllama-1.1b-1t-openorca.Q2_K.gguf
        mode: '0644'

    - name: Run Llama model Docker container
      command: >
        docker run --rm  -d --network monitoring-net  -v /home/ec2-user/models:/models -p 8000:8000
        ghcr.io/ggml-org/llama.cpp:server -m /models/tinyllama-1.1b-1t-openorca.Q2_K.gguf
      args:
        chdir: /home/ec2-user

    - name: Remove existing gatus container if present
      command: docker rm -f gatus
      ignore_errors: yes
      args:
        chdir: /home/ec2-user

    - name: Run Gatus Docker container
      command: >
        docker run -d --name gatus --network monitoring-net -p 8080:8080 -v /home/ec2-user/gatus-config.yml:/config/config.yaml twinproduction/gatus
      args:
        chdir: /home/ec2-user
    
    - name: Remove existing prometheus container if present
      command: docker rm -f prometheus
      ignore_errors: yes
      args:
        chdir: /home/ec2-user
    
    - name: Run Prometheus Docker container
      command: >
        docker run -d --name prometheus --network monitoring-net -p 80:9090 -v /home/ec2-user/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus
      args:
        chdir: /home/ec2-user


